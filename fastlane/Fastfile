# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane


require 'dotenv'

lane :load_env do |env|

  env_file = case env
             when "dev" then ".env.dev"
             when "staging" then ".env.staging"
             when "prod" then ".env.prod"
             else ".env.staging" # default if unspecified
             end
  Dotenv.load(env_file)
  
  puts "Loaded environment file: #{env_file}"  # Log the loaded env file
  puts "CHATID: #{ENV['CHAT_ID']} >>> TLETOKEN: #{ENV['TELE_TOKEN']}"

end

lane :firebase_option_dev do 
  # Get the flavor argument or default to 'dev'
  flavor = "dev"

   Dir.chdir('../') do
    # Run flutterfire configure in the root directory
    sh("flutterfire configure --project=demoleng-a6300 --out=./lib/utils/firebase_options_#{flavor}.dart")
  end
end
lane :firebase_option_prod do 
  # Get the flavor argument or default to 'dev'

  
   Dir.chdir('../') do
    # Run flutterfire configure in the root directory
    sh("flutterfire configure --project=demoleng-a6300 --out=./lib/utils/firebase_options.dart")
  end
end
lane :firebase_option_staging do 
  # Get the flavor argument or default to 'dev'
  flavor = "staging"
  
   Dir.chdir('../') do
    # Run flutterfire configure in the root directory
    sh("flutterfire configure --project=demoleng-a6300 --out=./lib/utils/firebase_options.dart")
  end
end
lane :build_runner_watch do
  sh("flutter pub run build_runner watch --delete-conflicting-outputs")
end
lane :build_runner do
  sh("flutter pub run build_runner build --delete-conflicting-outputs")
end
  lane :testlane do
    current_dir = Dir.pwd
    puts("Current directory is: #{current_dir}")
  end

lane :flutter_clean_get do
  Dir.chdir('../') do 
   sh(' flutter clean &&  
        flutter pub get')
  end
end

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  lane :clean_build do
    Dir.chdir('../') do
    # Run flutterfire configure in the root directory
    sh("cd android && ./gradlew clean && cd ..")
       end
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end

  desc "testing"
  lane :testlane do
    sh('Running testing')
  end

  # desc "generate-key-store"
  # lane :generatekey do
  #   keystore_path = "./upload-keystore.jks"
  #   sh('keytool -genkey -v -keystore ~/upload-keystore.jks -keyalg RSA \
  #       -keysize 2048 -validity 10000 -alias store-key')
  # end

  lane :generatekey do
  # Prompt for input values
  keystore_password = prompt(text: "Enter keystore password:")
    key_password = prompt(text: "Enter key password:")
    keystore_path = File.expand_path("./upload-keystore.jks")
    alias_name = prompt(text: "Enter alias name:")
    distinguished_name = prompt(text: "Enter Distinguished Name (e.g., CN=Your Name, OU=Your Unit, O=Your Organization, L=Your City, ST=Your State, C=US):")
    sh("keytool -genkey -v -keystore #{keystore_path} -keyalg RSA -keysize 2048 -validity 10000 -alias #{alias_name} -storepass #{keystore_password} -keypass #{key_password} -dname '#{distinguished_name}'")
  end

  lane :devbuildRelease do
    gradle(
      task: "assembleDevRelease"
    )
  end
  lane :stagingbuildRelease do
    gradle(
      task: "assembleStagingRelease"
    )
  end
  lane :prodbuildRelease do
    gradle(
      task: "assembleProd Release"
    )
  end




  platform :android do
   lane :flutter_build_apk_release do
    # flavor = ENV['FLAVOR'] || 'prod' 
    flavor = 'staging'
    sh('flutter build apk --flavor staging --release')
   end

  end

platform :android do
  desc "Increment version code and version name, then build the app"
  lane :increment_version do
    # Get current version code from build.gradle
    version_code = get_version_code(
      gradle_file_path: "./android/app/build.gradle",
    )

    put("Version code code is #{version_code}")
    
    # Increment version code
    increment_version_code(  gradle_file_path: "./android/app/build.gradle"
)
    # Get current version name from build.gradle
    version_name = get_version_name(
         gradle_file_path: "./android/app/build.gradle",

    )


    # Build the app after incrementing version code and name
  
  end
end

  platform :android do
  desc "Build and distribute APK for Staging"
  lane :staging_beta do
    load_env(env:"staging")  # Pass "staging" as a hash parameter
    # gradle(task: "clean",project_dir: "./android")
     # Increment versionName by a patch (1.0.0 â†’ 1.0.1)
    increment_version_name(
      gradle_file_path: "./android/app/build.gradle",
      bump_type: "patch" # Options: "patch", "minor", "major"
    )

    # Increment version code
    increment_version_code(
      gradle_file_path: "./android/app/build.gradle",
    )

    # Retrieve updated version values
    version_name = get_version_name(
      gradle_file_path: "./android/app/build.gradle"
    )
    version_code = get_version_code(
      gradle_file_path: "./android/app/build.gradle"
    )

    
   firebase_app_distribution(
    app: "1:77080916809:android:ebe1398ec028ced65b2098",  # Your Firebase App ID
    testers: "Sivsovanpanhavorn@gmail.com, Sovanpanhavorn.siv@tovtrip.com,amyjohn922@gmail.com, henghuylong1@gmail.com, narakithya@gmail.com",  # Testers' email addresses
    release_notes:  "ðŸ“¢ New Android Build Available on Firebase App Distribution!
â€¢ Environment: Staging
â€¢ Build: #{version_code}
â€¢ Version: #{version_name}

ðŸš€ Fix Bug Features & Updates:

Fix Notification issues
User now can view profile in comments listing
Adjust some UI issues

âš  Known Issues:

Facebook (Dev Mode) â†’ The app may not retrieve the userâ€™s profile name when logged in under Facebookâ€™s Dev Mode, causing the user to appear as annouymous on both Android and iOS. This issue is not present in the production version.

OTP Issue (Android Beta) â†’ OTP functionality is not working in the Android beta version (available only in production). This issue does not affect the iOS version.

Android Notification Icon â†’ When the app is in the background or terminated, the app icon may appear differently than expected. This issue is currently being the android design system and will need you guy to give me an icon.

ðŸ’¬ Feedback:
Weâ€™re excited to hear your thoughts on the new features! Test everything out, and feel free to report any bugs or issues you encounter. Your feedback helps us improve the app for everyone.

ðŸ§ª Enjoy testing! ðŸš€",
apk_path: "/Users/macbook/Documents/flutter/fitlink-2024/build/app/outputs/flutter-apk/app-staging-release.apk"

)
deploy_message =  "ðŸ“¢ New Android Build Available on Firebase App Distribution!
â€¢ Environment: Staging
â€¢ Build: #{version_code}
â€¢ Version: #{version_name}

ðŸš€ Fix Bug Features & Updates:

Fix Notification issues
User now can view profile in comments listing
Adjust some UI issues

Facebook (Dev Mode) â†’ The app may not retrieve the userâ€™s profile name when logged in under Facebookâ€™s Dev Mode, causing the user to appear as annouymous on both Android and iOS. This issue is not present in the production version.

OTP Issue (Android Beta) â†’ OTP functionality is not working in the Android beta version (available only in production). This issue does not affect the iOS version.

Android Notification Icon â†’ When the app is in the background or terminated, the app icon may appear differently than expected. This issue is currently being the android design system and will need you guy to give me an icon.

ðŸ’¬ Feedback:
Weâ€™re excited to hear your thoughts on the new features! Test everything out, and feel free to report any bugs or issues you encounter. Your feedback helps us improve the app for everyone.

ðŸ§ª Enjoy testing! ðŸš€"

# Move this below the assignment
puts "CHATID: #{deploy_message}"

telegram(
  text: deploy_message,
  chat_id: ENV['CHAT_ID'], 
  token: ENV['TELE_TOKEN'] 
)

end

end
 
end



# New build is available on TestFlight!
# â€¢ Environment : Staging
# â€¢ Build : 34
# â€¢ Version : v2.0.1
# Please wait 5 minutes before the download becomes available.
# And check your email for testing invitation. Thank you.